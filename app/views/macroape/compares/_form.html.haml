= task_form_for task, :as => :task, url: macroape_compare_path, html: {class: 'task_params'} do |f|
  = hidden_field_tag 'example', params.fetch(:example, 'PCM')
  .toy_examples
    Toy examples for the #{link_to 'PCM-to-PCM', macroape_compare_path(example: :PCM) }, #{link_to 'PWM-to-PWM', macroape_compare_path(example: :PWM) }, #{link_to 'PPM-to-PPM', macroape_compare_path(example: :PPM) } and #{link_to 'different types', macroape_compare_path(example: :mixed) } comparison.
  %hr
  .row
    .span4.first_model
      = f.fields_for :first_motif, task.first_motif do |motif_form|
        .data_model
          = motif_form.input :data_model, label: 'Model 1:', as: :motif_type_selector
        .matrix
          = motif_form.input :matrix, label: 'Matrix 1:', :as => :text
    .span4.second_model
      = f.fields_for :second_motif, task.second_motif do |motif_form|
        .data_model
          = motif_form.input :data_model, label: 'Model 2:', as: :motif_type_selector
        .matrix
          = motif_form.input :matrix, label: 'Matrix 2:', :as => :text

  Advanced options:
  .expand_button
    %a{href: '#'} [+]
  .advanced_options
    .pvalue_options
      .pvalue
        = f.input :pvalue, label: 'P-value:'
      .pvalue_boundary
        = f.input :pvalue_boundary, as: :pvalue_boundary_selector
    = render partial:'shared/background_model', locals: {form_builder: f, object_name: :background, object_value: task.background, background_title: 'Background:'}

    .dicretization
      = f.input :discretization
    .row
      .span4.data_model_specifiers.first_model
        = f.fields_for :first_motif, task.first_motif do |motif_form|
          .pseudocount
            = motif_form.input :pseudocount, placeholder: 'Leave empty to use default value (logarithm of sample size)', label: 'Pseudocount (model 1):'
          .effective_count
            = motif_form.input :effective_count, label: 'Effective sample size (model 1):'
      .span4.data_model_specifiers.second_model
        = f.fields_for :second_motif, task.second_motif do |motif_form|
          .pseudocount
            = motif_form.input :pseudocount, placeholder: 'Leave empty to use default value (logarithm of sample size)', label: 'Pseudocount (model 2):'
          .effective_count
            = motif_form.input :effective_count, label: 'Effective sample size (model 2):'
  %br
  = f.submit 'Run', data: {disable_with: 'Sending request'}, class: 'btn btn-primary'
  = link_to macroape_compare_path(example: params.fetch(:example, 'PCM')), class: 'reset-task' do
    = f.button :button, 'Reset', :type => 'button', :class => 'btn btn-warning'
